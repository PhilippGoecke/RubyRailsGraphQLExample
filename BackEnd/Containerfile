FROM debian:trixie-slim as install

ARG DEBIAN_FRONTEND=noninteractive

#SHELL ["/bin/bash", "-c"]
RUN rm /bin/sh \
  && ln -s /bin/bash /bin/sh

# install dependencies
RUN apt update && apt upgrade -y \
  && apt install -y --no-install-recommends --no-install-suggests ca-certificates git curl libyaml-dev build-essential libssl-dev zlib1g-dev \
  && rm -rf "/var/lib/apt/lists/*" \
  && rm -rf /var/cache/apt/archives

# add user and set home directory
ARG USER=rails
RUN useradd --create-home --shell /bin/bash $USER
ARG HOME="/home/$USER"
WORKDIR $HOME
USER $USER

# install Ruby using rbenv
ENV PATH="$HOME/.rbenv/bin:$PATH"
RUN git clone https://github.com/rbenv/rbenv.git --depth 1 ~/.rbenv \
  && ~/.rbenv/bin/rbenv init \
  && rbenv --version \
  && mkdir "$(rbenv root)"/plugins/ \
  && git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build \
  && rbenv install 3.4.7 \
  && rbenv global 3.4.7 \
  && rbenv rehash \
  && gem install bundler \
  && bundler --version
ENV PATH="$HOME/.rbenv/shims:$PATH"

WORKDIR /rails/demo

ENV RAILS_ENV=production

# install Rails and initialize a new Rails app
RUN bundle init \
  && bundle add rails --version "~> 8.0.3" \
  && bundle exec rails new . --force --skip-git --api --database=sqlite3 \
  # https://graphql-ruby.org/getting_started.html
  && bundle add graphql graphiql-rails \
  && bundle exec rails generate graphql:install \
  && bundle exec rails generate model Todo title:string completed:boolean \
  && RAILS_ENV=production bundle exec rails db:migrate \
  # app/graphql/types/todo_type.rb
#module Types
#  class TodoType < Types::BaseObject
#    field :id, ID, null: false
#    field :title, String, null: false
#    field :completed, Boolean, null: false
#  end
#end
  && bundle exec rails generate graphql:object TodoType id:ID title:String completed:Boolean \
  # app/graphql/types/query_type.rb
#module Types
#  class QueryType < Types::BaseObject
#    # Alle TODOS
#    field :todos, [Types::TodoType], null: false
#
#    def todos
#      Todo.all
#    end
#
#    # Einzelnes TODO
#    field :todo, Types::TodoType, null: true do
#      argument :id, ID, required: true
#    end
#
#    def todo(id:)
#      Todo.find_by(id: id)
#    end
#  end
#end
  && echo -ne "module Types\n  class QueryType < Types::BaseObject\n    # Alle TODOS\n    field :todos, [Types::TodoType], null: false\n\n    def todos\n      Todo.all\n    end\n\n    # Einzelnes TODO\n    field :todo, Types::TodoType, null: true do\n      argument :id, ID, required: true\n    end\n\n    def todo(id:)\n      Todo.find_by(id: id)\n    end\n  end\nend\n" >> app/graphql/types/query_type.rb \
  && bundle exec rails generate graphql:mutation Todo \
  && sed -i 's/Mutations::Todo/Mutations::Todo\n\n    field :create_todo, Types::TodoType, null: false do\n      argument :title, String, required: true\n    end\n\n    def create_todo(title:)\n      Todo.create!(title: title, completed: false)\n    end\n\n    field :update_todo, Types::TodoType, null: false do\n\n      argument :id, ID, required: true\n      argument :title, String, required: false\n      argument :completed, Boolean, required: false\n    end\n\n    def update_todo(id:, title: nil, completed: nil)\n      todo = Todo.find(id)\n      todo.update!(title: title, completed: completed)\n      todo\n    end\n\n    field :delete_todo, Boolean, null: false do\n      argument :id, ID, required: true\n    end\n\n    def delete_todo(id:)\n      todo = Todo.find(id)\n      todo.destroy\n      true\n    end\n/g' app/graphql/types/mutation_type.rb \
  #&& bundle exec rails generate graphql:mutation_create Todo \
  #&& bundle exec rails generate graphql:mutation_update Todo \
  #&& bundle exec rails generate graphql:mutation_delete Todo \
  && echo -ne "class TodoSchema < GraphQL::Schema\n  query(Types::QueryType)\n  mutation(Types::MutationType)\nend\n" > app/graphql/todo_schema.rb \
  && sed -i 's/result = DemoSchema.execute/result = TodoSchema.execute/g' app/controllers/graphql_controller.rb \
  && sed -i 's/# root/mount GraphiQL::Rails::Engine, at: "\/graphiql", graphql_path: "\/graphql"\n  # root/g' config/routes.rb \
  && RAILS_ENV=production bundle exec rails db:migrate

# new stage for Rails app
FROM debian:trixie-slim as rails

# install dependencies
RUN apt update && apt upgrade -y \
  && apt install -y --no-install-recommends --no-install-suggests libyaml-dev libssl-dev \
  && rm -rf "/var/lib/apt/lists/*" \
  && rm -rf /var/cache/apt/archives

# add user and set home directory
ARG USER=rails
RUN useradd --create-home --shell /bin/bash $USER
ARG HOME="/home/$USER"
WORKDIR $HOME
USER $USER

# copy rbenv, Ruby and Rails App from install stage
COPY --from=install $HOME/.rbenv $HOME/.rbenv
ENV PATH="$HOME/.rbenv/shims:$PATH"
COPY --from=install /rails/demo /rails/demo

WORKDIR /rails/demo

ENV RAILS_ENV=production

EXPOSE 3000

HEALTHCHECK --interval=35s --timeout=4s CMD curl -f http://localhost:3000/up || exit 1

CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000"]
